import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from mpl_toolkits.mplot3d import Axes3D
from matplotlib import cm

# ----------------------
# Step 0: Generate Synthetic Data
# ----------------------

S0 = 100  # Spot price
r = 0.01  # Risk-free rate

# Create a grid of strikes and maturities
K_vals = np.linspace(60, 140, 20)
T_vals = np.linspace(0.05, 1.0, 20)

K_array, T_array = np.meshgrid(K_vals, T_vals)
K_array = K_array.flatten()
T_array = T_array.flatten()

# Generate synthetic implied vols with smile + time skew
iv_array = 0.2 + 0.1 * (np.log(K_array / S0))**2 + 0.05 * T_array + 0.02 * np.random.randn(len(K_array))

# ----------------------
# Step 1: Compute log-moneyness
# ----------------------

log_moneyness = np.log(K_array / S0)

# ----------------------
# Step 2: Fit Polynomial Regression
# ----------------------

X = np.column_stack([log_moneyness, T_array])
y = iv_array

poly = PolynomialFeatures(degree=2)
X_poly = poly.fit_transform(X)

model = LinearRegression()
model.fit(X_poly, y)

# ----------------------
# Step 3: Predict on a Grid
# ----------------------

k_grid = np.linspace(-1, 1, 100)
T_grid = np.linspace(0.01, 1.0, 100)
K_mesh, T_mesh = np.meshgrid(k_grid, T_grid)
X_plot = np.column_stack([K_mesh.ravel(), T_mesh.ravel()])
X_plot_poly = poly.transform(X_plot)
iv_pred = model.predict(X_plot_poly).reshape(K_mesh.shape)

# ----------------------
# Step 4: Plot the Surface
# ----------------------

fig = plt.figure(figsize=(12, 6))
ax = fig.add_subplot(111, projection='3d')

# Plot surface
ax.plot_surface(K_mesh, T_mesh, iv_pred, cmap=cm.viridis)

# Axis labels with padding
ax.set_xlabel("log(K/S)", labelpad=3)
ax.set_ylabel("T (maturity)", labelpad=3)
ax.set_zlabel("Implied Volatility", labelpad=3)  # Push z-label away from ticks

# Z-label rotation and tick spacing
ax.zaxis.label.set_rotation(90)
ax.zaxis.label.set_fontsize(12)
ax.tick_params(axis='z', pad=6)

# Adjust layout so nothing is clipped
fig.subplots_adjust(left=0.1, right=0.95, bottom=0.1, top=0.9)

# Title
plt.title("Synthetic IV Surface in Log-Moneyness Space", fontsize=14)
plt.show()



